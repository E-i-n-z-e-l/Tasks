                                                    HashSet

HashSet в Java представляет собой реализацию интерфейса Set и используется для хранения набора уникальных элементов.
Основное преимущество HashSet заключается в том, что он обеспечивает постоянное время выполнения для основных операций
(добавление, удаление, поиск), что делает его подходящим для обработки больших объемов данных.

Основные методы HashSet

### 1. add(E e)
Добавляет указанный элемент в HashSet, если он еще не присутствует.

### 2. contains(Object o)
Проверяет, содержит ли HashSet указанный элемент. Возвращает true, если элемент присутствует, и false в противном случае.

### 3. remove(Object o)
Удаляет указанный элемент из HashSet, если он присутствует.

Пример использования основных методов HashSet

import java.util.HashSet;
import java.util.Set;

public class HashSetExample {
    public static void main(String[] args) {
        Set<String> hashSet = new HashSet<>();

        // Добавление элементов
        hashSet.add("One");
        hashSet.add("Two");
        hashSet.add("Three");

        // Проверка наличия элемента
        boolean containsElement = hashSet.contains("Two"); // результат - true

        // Удаление элемента
        hashSet.remove("Two");
    }
}


HashSet позволяет хранить только уникальные элементы, и его методы обеспечивают эффективный поиск, добавление и
удаление элементов во множестве.










































