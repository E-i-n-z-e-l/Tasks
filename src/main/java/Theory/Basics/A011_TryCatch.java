package Theory.Basics;

/**
 * Перехват исключений - try-catch.
 * В блоке try главный метод.

 * В блоке catch перехватываем ошибки - в первом блоке просим пользователя ввести число если таковое он
 * не ввел, во втором блоке ловим ошибку, если пользователь ввел не число.

 * В блоке finally пишем код, который будет выполняться в любом случае независимо от ошибок.
 */
public class A011_TryCatch {
    public static void main(String[] args) {
        try
        {
            int num = Integer.parseInt("1"); // С помощью Integer.parseInt() переводим строку в число.
            System.out.println("Вы ввели: "+ num);
        }
        catch(ArrayIndexOutOfBoundsException e) {
            System.out.println("Требуется целочисленный аргумент.");
        }
        catch( NumberFormatException e ) {
            System.out.println("Неверный формат аргумента.");
        }
        finally {
            System.out.println("Программа завершила работу.");
        }
    }
}

/**
 В Java есть множество видов исключений. Некоторые из них:

 1. NullPointerException - возникает при попытке обратиться к объекту, который не был инициализирован.

 2. IllegalArgumentException - возникает при передаче некорректного аргумента методу.

 3. IOException - возникает при ошибке ввода-вывода.

 4. ClassNotFoundException - возникает, когда JVM не может найти класс, который был указан в коде.

 5. ArithmeticException - возникает при попытке выполнить арифметическую операцию, которая не может
 быть выполнена (например, деление на ноль).

 6. ClassCastException - возникает при попытке выполнить некорректное приведение типов.

 7. InterruptedException - возникает, когда поток исполнения был прерван.

 Это только некоторые из возможных исключений в Java. Каждый класс исключений имеет свои особенности
 и может быть обработан по-разному.
 */
